@page "/"
@using Bayolu.ViewModel
@inject HttpClient Http
<div class="row">

    <div class="col-6">
        <div class="form-group">
            <label for="exampleFormControlInput1">User Id</label>
            <input type="text" class="form-control" id="userid" placeholder="User id" @bind="model.Id">
        </div>
        <div class="form-group">
            <label for="exampleFormControlInput1">Full name</label>
            <input type="text" class="form-control" id="@nameof(model.FullName)" placeholder="Full name" @bind="model.FullName">
        </div>
        <div class="form-group">
            <label for="exampleFormControlInput1">Password</label>
            <input type="password" class="form-control" id="@nameof(model.Password)" @bind="model.Password">
        </div>
        <div class="form-group">
            <label for="exampleFormControlSelect1">Team</label>

            <select class="form-control" id="@nameof(model.Team)">
                @foreach (var item in teams)
                {
                    <option value="@item.Key">@item.Value</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="exampleFormControlInput1">File Storage Capacity</label>
            <input type="number" class="form-control" id="@nameof(model.StorageCapacity)" @bind="model.StorageCapacity">
        </div>
    </div>
    <div class="col-6">
        <form>
            <div class="form-group">
                <label for="exampleFormControlInput1">Email address</label>
                <input type="email" class="form-control" id="@nameof(model.Email)" @bind="model.Email">
            </div>
            <div class="form-group">
                <label for="exampleFormControlSelect1">Roles:</label>
                <select class="form-control" id="@nameof(model.Role)">
                    @foreach (var item in roles)
                    {
                        <option value="@item.Key">@item.Value</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="exampleFormControlInput1">Confirm Password</label>
                <input type="password" class="form-control" id="@nameof(model.Password)" @bind="model.Password">
            </div>
            <div class="form-group">
                <label for="exampleFormControlInput1">Original Folder</label>
                <input type="text" class="form-control" id="@nameof(model.OriginalFolder)" @bind="model.OriginalFolder">
            </div>
            <div class="form-group">
                <label for="exampleFormControlTextarea1">Comment</label>
                <textarea class="form-control" id="@nameof(model.Comment)" rows="3" @bind="model.Comment"></textarea>
            </div>
            <div class="form-group">
                @*<button class="btn btn-danger" @onclick="Cancel">Cancel</button>*@
                <button class="btn btn-success" @onclick="Save">Save</button>
            </div>
        </form>
    </div>
</div>

@code{

    List<KeyValuePair<int, string>> teams = new List<KeyValuePair<int, string>>() {

        new KeyValuePair<int, string>(1,"Development"),
        new KeyValuePair<int, string>(2,"Accounting"),
        new KeyValuePair<int, string>(3,"Hr"),
    };
    List<KeyValuePair<int, string>> roles = new List<KeyValuePair<int, string>>() {

        new KeyValuePair<int, string>(1,"Admin"),
        new KeyValuePair<int, string>(2,"Cacher"),
        new KeyValuePair<int, string>(3,"Accounter"),
    };

    Bayolu.ViewModel.UserViewModel model = new Bayolu.ViewModel.UserViewModel();


    private async Task Save()
    {
        await Http.PostAsJsonAsync("http://localhost:5001/v1/users", model);
    }
    protected override async Task OnInitializedAsync()
    {

    }
}